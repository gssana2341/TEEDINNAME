const { createClient } = require('@supabase/supabase-js')

// ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå environment
const supabaseUrl = 'https://kxkryylxfkkjgbgtxfog.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4a3J5eWx4ZmtramdiZ3R4Zm9nIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjgwMDU4MywiZXhwIjoyMDYyMzc2NTgzfQ.6Jq5oyxsaw9wN3Z79PUazCxHefbdzkBmJpjtbLq2HAg'

const supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function fixXateeeiunPassword() {
  console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö xateeeiun@gmail.com\n')

  const targetEmail = 'xateeeiun@gmail.com'
  const correctPassword = 'awdawdasd1'

  try {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô users table
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô users table...')
    const { data: userData, error: userError } = await supabaseAdmin
      .from('users')
      .select('*')
      .eq('email', targetEmail)
      .single()

    if (userError) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô users table:', userError.message)
      return
    }

    console.log('‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô users table:', {
      id: userData.id,
      email: userData.email,
      password_in_db: userData.password,
      role: userData.role
    })

    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô database
    console.log('\nüîê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô database...')
    const { data: testLogin1, error: testError1 } = await supabaseAdmin.auth.signInWithPassword({
      email: targetEmail,
      password: userData.password
    })

    if (testError1) {
      console.log(`‚ùå Login ‡∏î‡πâ‡∏ß‡∏¢ "${userData.password}" ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ${testError1.message}`)
    } else {
      console.log(`‚úÖ Login ‡∏î‡πâ‡∏ß‡∏¢ "${userData.password}" ‡πÑ‡∏î‡πâ`)
      await supabaseAdmin.auth.signOut()
    }

    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
    console.log('\nüîê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á...')
    const { data: testLogin2, error: testError2 } = await supabaseAdmin.auth.signInWithPassword({
      email: targetEmail,
      password: correctPassword
    })

    if (testError2) {
      console.log(`‚ùå Login ‡∏î‡πâ‡∏ß‡∏¢ "${correctPassword}" ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ${testError2.message}`)
    } else {
      console.log(`‚úÖ Login ‡∏î‡πâ‡∏ß‡∏¢ "${correctPassword}" ‡πÑ‡∏î‡πâ!`)
      await supabaseAdmin.auth.signOut()
    }

    // 4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô custom users table ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
    if (userData.password !== correctPassword) {
      console.log(`\nüîß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô users table ‡∏à‡∏≤‡∏Å "${userData.password}" ‡πÄ‡∏õ‡πá‡∏ô "${correctPassword}"...`)
      
      const { error: updateError } = await supabaseAdmin
        .from('users')
        .update({ 
          password: correctPassword,
          updated_at: new Date().toISOString()
        })
        .eq('email', targetEmail)

      if (updateError) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ:', updateError.message)
      } else {
        console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô users table ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        const { data: verifyData, error: verifyError } = await supabaseAdmin
          .from('users')
          .select('password, updated_at')
          .eq('email', targetEmail)
          .single()

        if (verifyData) {
          console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:', {
            password: verifyData.password,
            updated_at: verifyData.updated_at
          })
        }
      }
    } else {
      console.log('‚úÖ ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô database ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß')
    }

    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    console.log('\nüéØ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢...')
    const { data: finalTest, error: finalError } = await supabaseAdmin.auth.signInWithPassword({
      email: targetEmail,
      password: correctPassword
    })

    if (finalError) {
      console.log(`‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${finalError.message}`)
    } else {
      console.log('üéâ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
      await supabaseAdmin.auth.signOut()
    }

    console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ:')
    console.log(`‚úÖ ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${targetEmail}`)
    console.log(`‚úÖ ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ: ${correctPassword}`)
    console.log('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô database ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß')

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message)
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
fixXateeeiunPassword()
