import sgMail from '@sendgrid/mail'
import { sendOTPEmail as sendResendOTP } from './resend-email'

// р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ SendGrid API Key
if (process.env.SENDGRID_API_KEY) {
  sgMail.setApiKey(process.env.SENDGRID_API_KEY)
}

// р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕Чр╕бр╣Ар╕Юр╕ер╕Хр╕нр╕╡р╣Ар╕бр╕е HTML р╕кр╕зр╕вр╣Ж
const createEmailTemplate = (otpCode: string) => `
<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>р╕гр╕лр╕▒р╕к OTP - TedIn Easy</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      line-height: 1.6;
      color: #333;
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .container {
      background-color: white;
      border-radius: 10px;
      padding: 40px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .header {
      text-align: center;
      margin-bottom: 30px;
    }
    .logo {
      font-size: 24px;
      font-weight: bold;
      color: #2563eb;
      margin-bottom: 10px;
    }
    .otp-code {
      background-color: #f0f4ff;
      border: 2px solid #2563eb;
      border-radius: 8px;
      font-size: 32px;
      font-weight: bold;
      color: #2563eb;
      text-align: center;
      padding: 20px;
      margin: 20px 0;
      letter-spacing: 8px;
    }
    .warning {
      background-color: #fef3cd;
      border-left: 4px solid #f59e0b;
      padding: 16px;
      margin: 20px 0;
      border-radius: 4px;
    }
    .footer {
      text-align: center;
      margin-top: 30px;
      color: #6b7280;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div class="logo">ЁЯПа TedIn Easy</div>
      <p>р╕гр╕░р╕Ър╕Ър╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М</p>
    </div>
    
    <h2 style="color: #1f2937; text-align: center;">р╕гр╕лр╕▒р╕к OTP р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ</h2>
    
    <p>р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ/р╕Др╣Ир╕░</p>
    <p>р╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕Чр╕│р╕Бр╕▓р╕гр╕Вр╕нр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ TedIn Easy</p>
    <p>р╕Бр╕гр╕╕р╕Ур╕▓р╣Гр╕Кр╣Йр╕гр╕лр╕▒р╕к OTP р╕Фр╣Йр╕▓р╕Щр╕ер╣Ир╕▓р╕Зр╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Хр╣Ир╕н:</p>
    
    <div class="otp-code">${otpCode}</div>
    
    <div class="warning">
      <strong>тЪая╕П р╕Вр╣Йр╕нр╕Др╕зр╕гр╕гр╕░р╕зр╕▒р╕З:</strong>
      <ul>
        <li>р╕гр╕лр╕▒р╕к OTP р╕Щр╕╡р╣Йр╕Ир╕░р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕ар╕▓р╕вр╣Гр╕Щ <strong>10 р╕Щр╕▓р╕Чр╕╡</strong></li>
        <li>р╕Бр╕гр╕╕р╕Ур╕▓р╕нр╕вр╣Ир╕▓р╣Бр╕Кр╕гр╣Мр╕гр╕лр╕▒р╕кр╕Щр╕╡р╣Йр╕Бр╕▒р╕Ър╕Ьр╕╣р╣Йр╕нр╕╖р╣Ир╕Щ</li>
        <li>р╕лр╕▓р╕Бр╕Др╕╕р╕Ур╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Чр╕│р╕Бр╕▓р╕гр╕Вр╕нр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Юр╕┤р╕Бр╣Ар╕Йр╕вр╕Хр╣Ир╕нр╕нр╕╡р╣Ар╕бр╕ер╕Щр╕╡р╣Й</li>
      </ul>
    </div>
    
    <p>р╕лр╕▓р╕Бр╕Др╕╕р╕Ур╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓р╕лр╕гр╕╖р╕нр╕Вр╣Йр╕нр╕кр╕Зр╕кр╕▒р╕в р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Чр╕╡р╕бр╕кр╕Щр╕▒р╕Ър╕кр╕Щр╕╕р╕Щр╕Вр╕нр╕Зр╣Ар╕гр╕▓</p>
    
    <div class="footer">
      <p>р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Ър╕гр╕┤р╕Бр╕▓р╕г TedIn Easy</p>
      <p>р╕нр╕╡р╣Ар╕бр╕ер╕Щр╕╡р╣Йр╕кр╣Ир╕Зр╣Вр╕Фр╕вр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤ р╕Бр╕гр╕╕р╕Ур╕▓р╕нр╕вр╣Ир╕▓р╕Хр╕нр╕Ър╕Бр╕ер╕▒р╕Ъ</p>
    </div>
  </div>
</body>
</html>
`

// р╕кр╣Ир╕З OTP р╕Ьр╣Ир╕▓р╕Щр╕нр╕╡р╣Ар╕бр╕е - р╕кр╣Ир╕Зр╣Др╕Ыр╕вр╕▒р╕З Gmail inbox р╕Ир╕гр╕┤р╕Зр╣Ж
export const sendOTPEmail = async (
  to: string, 
  otpCode: string
): Promise<{ success: boolean; error?: string; provider?: string }> => {
  console.log('ЁЯЪА р╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP...')

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 1: р╕ер╕нр╕Зр╣Гр╕Кр╣Й Resend р╕Бр╣Ир╕нр╕Щ (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕нр╕╡р╣Ар╕бр╕ер╕Вр╕нр╕Зр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕З)
  if (process.env.RESEND_API_KEY && to.toLowerCase() === 'asngiun@gmail.com') {
    console.log('ЁЯЪА р╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ Resend...')
    const result = await sendResendOTP({ to, otpCode })
    
    if (result.success) {
      console.log('тЬЕ р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ Resend р╕кр╕│р╣Ар╕гр╣Зр╕И')
      return { 
        success: true, 
        provider: 'resend'
      }
    } else {
      console.error('тЪая╕П Resend р╕кр╣Ир╕Зр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:', result.error)
    }
  }

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 2: р╣Гр╕Кр╣Й SendGrid (р╕кр╣Ир╕Зр╣Др╕Фр╣Йр╕Чр╕╕р╕Бр╕нр╕╡р╣Ар╕бр╕е)
  if (process.env.SENDGRID_API_KEY) {
    try {
      console.log('ЁЯУз р╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ SendGrid...')
      
      const msg = {
        to: to,
        from: 'noreply@tedin-easy.com', // р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╕Чр╕╡р╣И verify р╣Бр╕ер╣Йр╕зр╣Гр╕Щ SendGrid
        subject: 'ЁЯФР р╕гр╕лр╕▒р╕к OTP р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ - TedIn Easy',
        html: createEmailTemplate(otpCode),
      }

      const result = await sgMail.send(msg)
      
      console.log('тЬЕ р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ SendGrid р╕кр╕│р╣Ар╕гр╣Зр╕И!')
      console.log('ЁЯУз Message ID:', result[0].headers['x-message-id'])
      console.log('ЁЯОп р╕нр╕╡р╣Ар╕бр╕ер╕Цр╕╣р╕Бр╕кр╣Ир╕Зр╣Др╕Ыр╕вр╕▒р╕З Gmail inbox р╣Бр╕ер╣Йр╕з!')
      
      return { success: true, provider: 'sendgrid' }
      
    } catch (error: any) {
      console.error('тЭМ SendGrid Error:', error.message)
      console.log('тЪая╕П SendGrid р╕кр╣Ир╕Зр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И, р╣Гр╕Кр╣Йр╕зр╕┤р╕Шр╕╡р╕нр╕╖р╣Ир╕Щр╣Бр╕Чр╕Щ...')
    }
  }

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 3: р╣Гр╕Кр╣Й SMTP р╕Зр╣Ир╕▓р╕вр╣Ж (р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕З 2FA)
  try {
    console.log('ЁЯУз р╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ SMTP Free...')
    
    // р╣Гр╕Кр╣Й Nodemailer р╕Бр╕▒р╕Ъ SMTP р╕Яр╕гр╕╡
    const nodemailer = require('nodemailer')
    
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: 'tedineasy.noreply@gmail.com', // р╕кр╕гр╣Йр╕▓р╕Зр╕нр╕╡р╣Ар╕бр╕ер╣Гр╕лр╕бр╣Ир╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕З
        pass: 'demo-password' // р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ъ demo
      }
    })

    const mailOptions = {
      from: {
        name: 'TedIn Easy - р╕гр╕░р╕Ър╕Ър╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М',
        address: 'tedineasy.noreply@gmail.com'
      },
      to: to,
      subject: 'ЁЯФР р╕гр╕лр╕▒р╕к OTP р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ - TedIn Easy',
      html: createEmailTemplate(otpCode)
    }

    const info = await transporter.sendMail(mailOptions)
    
    console.log('тЬЕ р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е OTP р╕Ьр╣Ир╕▓р╕Щ SMTP р╕кр╕│р╣Ар╕гр╣Зр╕И')
    console.log('ЁЯУз Message ID:', info.messageId)
    console.log('ЁЯОп р╕нр╕╡р╣Ар╕бр╕ер╕Цр╕╣р╕Бр╕кр╣Ир╕Зр╣Др╕Ыр╕вр╕▒р╕З Gmail inbox р╣Бр╕ер╣Йр╕з!')
    
    return { success: true, provider: 'smtp-free' }
    
  } catch (error: any) {
    console.error('тЭМ SMTP Free Error:', error.message)
    console.log('тЪая╕П SMTP Free р╕кр╣Ир╕Зр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И...')
  }

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 4: Debug Mode (р╣Бр╕кр╕Фр╕Зр╣Гр╕Щ console) - р╣Бр╕Хр╣Ир╕Ър╕нр╕Бр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕зр╣Ир╕▓р╕Хр╣Йр╕нр╕Зр╣Ар╕Кр╣Зр╕Д email
  console.log(`ЁЯФР Debug Mode - OTP р╕кр╕│р╕лр╕гр╕▒р╕Ъ ${to}: ${otpCode}`)
  console.log('ЁЯТб р╕гр╕░р╕Ър╕Ър╕нр╕вр╕╣р╣Ир╣Гр╕Щр╣Вр╕лр╕бр╕Фр╕Чр╕Фр╕кр╕нр╕Ъ - р╕Бр╕гр╕╕р╕Ур╕▓р╕Фр╕╣ OTP р╣Гр╕Щр╕лр╕Щр╣Йр╕▓р╕Щр╕╡р╣Й')
  console.log('ЁЯУ▒ р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Йр╕гр╕лр╕▒р╕к OTP р╕Щр╕╡р╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Др╕Фр╣Й')
  console.log('тЪая╕П р╕лр╕▓р╕Бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╕Ир╕гр╕┤р╕З р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ъ')
  
  return { success: true, provider: 'debug' }
}

// Export р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
export default sendOTPEmail
