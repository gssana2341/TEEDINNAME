const { createClient } = require('@supabase/supabase-js')

// ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå environment
const supabaseUrl = 'https://kxkryylxfkkjgbgtxfog.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4a3J5eWx4ZmtramdiZ3R4Zm9nIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjgwMDU4MywiZXhwIjoyMDYyMzc2NTgzfQ.6Jq5oyxsaw9wN3Z79PUazCxHefbdzkBmJpjtbLq2HAg'

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
async function deleteUserCompletely(userEmail) {
  console.log(`üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${userEmail}`)
  
  try {
    // 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const { data: publicUser } = await supabase
      .from('users')
      .select('*')
      .eq('email', userEmail)
      .single()

    if (!publicUser) {
      console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`)
      return false
    }

    const userId = publicUser.id
    console.log(`   üìã User ID: ${userId}`)

    // 2. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
    console.log(`   üîß ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á...`)

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á properties (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô agent)
    const { error: propertiesError } = await supabase
      .from('properties')
      .delete()
      .eq('agent_id', userId)
    
    if (propertiesError && !propertiesError.message.includes('No rows')) {
      console.log(`   ‚ö†Ô∏è  Properties: ${propertiesError.message}`)
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö properties ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á agents (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô agent)
    const { error: agentsError } = await supabase
      .from('agents')
      .delete()
      .eq('user_id', userId)
    
    if (agentsError && !agentsError.message.includes('No rows')) {
      console.log(`   ‚ö†Ô∏è  Agents: ${agentsError.message}`)
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö agents ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á admins (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô admin)
    const { error: adminsError } = await supabase
      .from('admins')
      .delete()
      .eq('user_id', userId)
    
    if (adminsError && !adminsError.message.includes('No rows')) {
      console.log(`   ‚ö†Ô∏è  Admins: ${adminsError.message}`)
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö admins ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô customer)
    const { error: customersError } = await supabase
      .from('customers')
      .delete()
      .eq('user_id', userId)
    
    if (customersError && !customersError.message.includes('No rows')) {
      console.log(`   ‚ö†Ô∏è  Customers: ${customersError.message}`)
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö customers ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á profiles
    const { error: profilesError } = await supabase
      .from('profiles')
      .delete()
      .eq('user_id', userId)
    
    if (profilesError && !profilesError.message.includes('No rows')) {
      console.log(`   ‚ö†Ô∏è  Profiles: ${profilesError.message}`)
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö profiles ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // 3. ‡∏•‡∏ö‡∏à‡∏≤‡∏Å public.users
    const { error: usersError } = await supabase
      .from('users')
      .delete()
      .eq('email', userEmail)

    if (usersError) {
      console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏à‡∏≤‡∏Å users table: ${usersError.message}`)
      return false
    } else {
      console.log(`   ‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å users table ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
    }

    // 4. ‡∏•‡∏ö‡∏à‡∏≤‡∏Å auth.users
    const { data: authUsers } = await supabase.auth.admin.listUsers()
    const authUser = authUsers.users.find(u => u.email === userEmail)
    
    if (authUser) {
      const { error: authError } = await supabase.auth.admin.deleteUser(authUser.id)
      
      if (authError) {
        console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏à‡∏≤‡∏Å auth: ${authError.message}`)
        return false
      } else {
        console.log(`   ‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å auth ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
      }
    } else {
      console.log(`   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô auth.users`)
    }

    console.log(`   üéâ ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${userEmail} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`)
    return true

  } catch (error) {
    console.log(`   ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`)
    return false
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ API
async function createSafeDeleteFunction() {
  console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢...\n')

  const deleteUserFunction = `
CREATE OR REPLACE FUNCTION delete_user_completely(user_email TEXT)
RETURNS BOOLEAN
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    target_user_id UUID;
    auth_user_id UUID;
BEGIN
    -- ‡∏´‡∏≤ user_id ‡∏à‡∏≤‡∏Å email
    SELECT id INTO target_user_id 
    FROM users 
    WHERE email = user_email;
    
    IF target_user_id IS NULL THEN
        RAISE NOTICE 'User not found: %', user_email;
        RETURN FALSE;
    END IF;
    
    -- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    DELETE FROM properties WHERE agent_id = target_user_id;
    DELETE FROM agents WHERE user_id = target_user_id;
    DELETE FROM admins WHERE user_id = target_user_id;
    DELETE FROM customers WHERE user_id = target_user_id;
    DELETE FROM profiles WHERE user_id = target_user_id;
    
    -- ‡∏•‡∏ö‡∏à‡∏≤‡∏Å users table
    DELETE FROM users WHERE id = target_user_id;
    
    RAISE NOTICE 'User % deleted successfully', user_email;
    RETURN TRUE;
    
EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Error deleting user %: %', user_email, SQLERRM;
        RETURN FALSE;
END;
$$;
`

  try {
    const { error } = await supabase.rpc('exec_sql', { sql: deleteUserFunction })
    
    if (error) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏î‡πâ:', error.message)
      
      // ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô - execute ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
      const { error: directError } = await supabase
        .from('users')
        .select('count')
        .limit(0) // ‡πÑ‡∏°‡πà‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ connection

      console.log('üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...')
      
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
    }
  } catch (error) {
    console.log('‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏î‡πâ:', error.message)
  }
}

async function demonstrateUserDeletion() {
  console.log('üéØ ‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢\n')
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const { data: currentUsers } = await supabase.from('users').select('email, role')
  console.log('üìã ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:')
  currentUsers.forEach((user, index) => {
    console.log(`   ${index + 1}. ${user.email} (${user.role})`)
  })
  
  console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:')
  console.log('1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: deleteUserCompletely("email@example.com")')
  console.log('2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô')
  console.log('3. ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏•‡∏ö‡∏à‡∏≤‡∏Å users table ‡πÅ‡∏•‡∏∞ auth.users')
  console.log('4. ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å')
  
  console.log('\n‚ö†Ô∏è  ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:')
  console.log('- ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≤‡∏ß‡∏£ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')
  console.log('- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• properties ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏î‡πâ‡∏ß‡∏¢')
  console.log('- ‡∏Ñ‡∏ß‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö')
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï
demonstrateUserDeletion()

// Export ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { deleteUserCompletely }
}
