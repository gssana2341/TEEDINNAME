const { createClient } = require('@supabase/supabase-js')

// ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå environment
const supabaseUrl = 'https://kxkryylxfkkjgbgtxfog.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4a3J5eWx4ZmtramdiZ3R4Zm9nIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjgwMDU4MywiZXhwIjoyMDYyMzc2NTgzfQ.6Jq5oyxsaw9wN3Z79PUazCxHefbdzkBmJpjtbLq2HAg'

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function syncAuthWithUsersTable() {
  console.log('üîÑ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Auth table ‡πÅ‡∏•‡∏∞ Users table...\n')

  try {
    // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å auth.users
    const { data: authUsers, error: authError } = await supabase.auth.admin.listUsers()
    if (authError) {
      console.error('‚ùå Error fetching auth users:', authError)
      return
    }

    console.log(`üìã ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô auth.users: ${authUsers.users.length} ‡∏Ñ‡∏ô`)

    // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å public.users
    const { data: publicUsers, error: publicError } = await supabase
      .from('users')
      .select('*')

    if (publicError) {
      console.error('‚ùå Error fetching public users:', publicError)
      return
    }

    console.log(`üìã ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô public.users: ${publicUsers.length} ‡∏Ñ‡∏ô\n`)

    // 3. ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô auth ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô public.users
    const authEmails = new Set(authUsers.users.map(u => u.email))
    const publicEmails = new Set(publicUsers.map(u => u.email))
    
    const onlyInAuth = authUsers.users.filter(authUser => !publicEmails.has(authUser.email))
    const onlyInPublic = publicUsers.filter(publicUser => !authEmails.has(publicUser.email))

    console.log('üîç ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô:')

    if (onlyInAuth.length > 0) {
      console.log(`\n‚ö†Ô∏è  ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô auth.users ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô public.users (${onlyInAuth.length} ‡∏Ñ‡∏ô):`)
      for (const user of onlyInAuth) {
        console.log(`   - ${user.email} (Auth ID: ${user.id})`)
        
        // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å auth.users ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Å‡∏±‡∏ô
        console.log(`     üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏à‡∏≤‡∏Å auth.users...`)
        const { error: deleteError } = await supabase.auth.admin.deleteUser(user.id)
        
        if (deleteError) {
          console.log(`     ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ: ${deleteError.message}`)
        } else {
          console.log(`     ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
        }
      }
    }

    if (onlyInPublic.length > 0) {
      console.log(`\n‚ö†Ô∏è  ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô public.users ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô auth.users (${onlyInPublic.length} ‡∏Ñ‡∏ô):`)
      for (const user of onlyInPublic) {
        console.log(`   - ${user.email} (Public ID: ${user.id})`)
        
        // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å public.users ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Å‡∏±‡∏ô
        console.log(`     üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏à‡∏≤‡∏Å public.users...`)
        const { error: deleteError } = await supabase
          .from('users')
          .delete()
          .eq('email', user.email)
          
        if (deleteError) {
          console.log(`     ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ: ${deleteError.message}`)
        } else {
          console.log(`     ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
        }
      }
    }

    if (onlyInAuth.length === 0 && onlyInPublic.length === 0) {
      console.log('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô auth.users ‡πÅ‡∏•‡∏∞ public.users ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß')
    }

    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ ID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ID ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô:')
    let mismatchCount = 0
    
    for (const authUser of authUsers.users) {
      if (publicEmails.has(authUser.email)) {
        const publicUser = publicUsers.find(u => u.email === authUser.email)
        if (publicUser && publicUser.id !== authUser.id) {
          console.log(`‚ö†Ô∏è  ${authUser.email}: Auth ID (${authUser.id}) != Public ID (${publicUser.id})`)
          mismatchCount++
          
          // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï public.users ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ ID ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö auth.users
          console.log(`   üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï public.users ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Auth ID...`)
          const { error: updateError } = await supabase
            .from('users')
            .update({ id: authUser.id })
            .eq('email', authUser.email)
            
          if (updateError) {
            console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏î‡πâ: ${updateError.message}`)
          } else {
            console.log(`   ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
          }
        }
      }
    }

    if (mismatchCount === 0) {
      console.log('‚úÖ ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô')
    }

    // 5. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå
    console.log('\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå:')
    
    const { data: updatedAuthUsers } = await supabase.auth.admin.listUsers()
    const { data: updatedPublicUsers } = await supabase.from('users').select('*')
    
    console.log(`   auth.users: ${updatedAuthUsers.users.length} ‡∏Ñ‡∏ô`)
    console.log(`   public.users: ${updatedPublicUsers.length} ‡∏Ñ‡∏ô`)
    
    if (updatedAuthUsers.users.length === updatedPublicUsers.length) {
      console.log('‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß')
    } else {
      console.log('‚ö†Ô∏è  ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô')
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error)
  }
}

syncAuthWithUsersTable()
