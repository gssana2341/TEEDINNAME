const { createClient } = require('@supabase/supabase-js')

// ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå environment
const supabaseUrl = 'https://kxkryylxfkkjgbgtxfog.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt4a3J5eWx4ZmtramdiZ3R4Zm9nIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjgwMDU4MywiZXhwIjoyMDYyMzc2NTgzfQ.6Jq5oyxsaw9wN3Z79PUazCxHefbdzkBmJpjtbLq2HAg'

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function investigateGassana() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö gassana2341@gmail.com ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î...\n')

  try {
    // 1. ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Auth
    const { data: authUsers, error: authError } = await supabase.auth.admin.listUsers()
    if (authError) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Auth:', authError.message)
      return
    }

    const gassanaAuth = authUsers.users.find(u => u.email === 'gassana2341@gmail.com')
    if (gassanaAuth) {
      console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Auth:')
      console.log(`   - ID: ${gassanaAuth.id}`)
      console.log(`   - Email: ${gassanaAuth.email}`)
      console.log(`   - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${gassanaAuth.email_confirmed_at ? '‡πÅ‡∏•‡πâ‡∏ß' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà'}`)
      console.log(`   - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date(gassanaAuth.created_at).toLocaleString('th-TH')}`)
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Auth')
      return
    }

    // 2. ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô public.users
    const { data: publicUsers, error: publicError } = await supabase
      .from('users')
      .select('*')
      .eq('email', 'gassana2341@gmail.com')

    if (publicError) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å public.users:', publicError.message)
      return
    }

    console.log('\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô public.users:')
    if (publicUsers && publicUsers.length > 0) {
      const gassanaPublic = publicUsers[0]
      console.log(`   - ID: ${gassanaPublic.id}`)
      console.log(`   - Email: ${gassanaPublic.email}`)
      console.log(`   - ‡∏ä‡∏∑‡πà‡∏≠: ${gassanaPublic.first_name} ${gassanaPublic.last_name}`)
      console.log(`   - ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô: ${gassanaPublic.password}`)
      console.log(`   - ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ${gassanaPublic.role}`)
      
      // ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö ID
      if (gassanaAuth.id !== gassanaPublic.id) {
        console.log(`   ‚ö†Ô∏è  ID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô! Auth: ${gassanaAuth.id}, Public: ${gassanaPublic.id}`)
      } else {
        console.log(`   ‚úÖ ID ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô`)
      }
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô public.users')
    }

    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö
    console.log('\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ:')
    const testPasswords = [
      '123456123456',  // ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      '123456',
      'admin',
      'admin123',
      'password',
      'gassana2341',
      'gassana123',
      '12345678',
      'qwerty',
      'password123'
    ]

    let foundPassword = null
    for (const testPassword of testPasswords) {
      try {
        const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
          email: 'gassana2341@gmail.com',
          password: testPassword
        })

        if (!signInError && signInData.user) {
          console.log(`   ‚úÖ ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ: ${testPassword}`)
          foundPassword = testPassword
          await supabase.auth.signOut()
          break
        } else {
          console.log(`   ‚ùå ${testPassword}: ${signInError?.message || '‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'}`)
        }
      } catch (error) {
        console.log(`   ‚ùå ${testPassword}: ${error.message}`)
      }
    }

    // 4. ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏à‡∏≠ ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (foundPassword) {
      console.log(`\nüîß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô: ${foundPassword}`)
      
      const { error: updateError } = await supabase
        .from('users')
        .update({ password: foundPassword })
        .eq('email', 'gassana2341@gmail.com')

      if (updateError) {
        console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ${updateError.message}`)
      } else {
        console.log(`   ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
      }
    } else {
      console.log('\n‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ')
      
      // ‡∏•‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
      console.log('\nüîÑ ‡∏•‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô "admin123"')
      const { data: resetData, error: resetError } = await supabase.auth.admin.updateUserById(
        gassanaAuth.id,
        { password: 'admin123' }
      )

      if (resetError) {
        console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï: ${resetError.message}`)
      } else {
        console.log(`   ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`)
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢
        const { error: updateError } = await supabase
          .from('users')
          .update({ password: 'admin123' })
          .eq('email', 'gassana2341@gmail.com')

        if (!updateError) {
          console.log(`   ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢`)
        }

        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
        console.log(`   üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: admin123`)
        const { data: testData, error: testError } = await supabase.auth.signInWithPassword({
          email: 'gassana2341@gmail.com',
          password: 'admin123'
        })

        if (!testError && testData.user) {
          console.log(`   ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!`)
          await supabase.auth.signOut()
        } else {
          console.log(`   ‚ùå ‡∏¢‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ${testError?.message}`)
        }
      }
    }

  } catch (error) {
    console.log(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`)
  }
}

investigateGassana()
